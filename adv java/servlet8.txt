Q) How to enable <load-on-startup> and what happens if we enable 
   <load-on-startup> ? 

We can enable <load-on-startup> inside web.xml file.

web.xml
------
	<web-app>
		<servlet>
			<servlet-name>TestSrv</servlet-name>
			<servlet-class>com.ihub.www.TestSrv</servlet-class>
			<load-on-startup>1</load-on-startup>
		</servlet>
		<servlet-mapping>
			<servlet-name>TestSrv</servlet-name>
			<url-pattern>/test</url-pattern>
		</servlet-mapping>
	</web-app>

If we enable <load-on-startup> then our servlet container will create servlet object during the server startup or during the deployment of web application.



Q)How many scopes are there in servlet?

We have three scopes in servlets.

1) Request scope (default scope)

2) Session scope 

3) Application scope 



Session
========
The continue and related operations performed on a web application with multiple request and response is called session.
ex:
	starting of java class and ending of java class is one session.
	login to gmail and logout from gmail is one session.

Session Tracking / Session Management
=====================================
Session tracking is used to make our application as statefull web application
inspite of HTTP protocol is stateless. 

In stateless web application , no web resource program can access previous request data while processing the current request during a session.

In statefull web application, all web resource programs can access previous request data while processing the current request during a session.

There are four techniques to perform session tracking.

1) By using Hidden box field

2) HttpCookies 

3) HttpSession with Cookies 

4) URL rewriting 


3) HttpSession with Cookies 
===========================
HttpSession is an interface which is present in javax.servlet.http package.

In HttpSession for every request one session ID will be created by the web container.

This session id used by the web container to identify that perticular is a old user or new user.

Diagram: servlet8.1

The main objective of HttpSession object are.

1) Bind the objects 

2) To manipulate the HttpSession objects.

Deployment Directory structure
----------------------------
SessionTracking
|
|---Java Resources
|	|
	|-----src
		|
		|---com.ihub.www
			|
			|---TestSrv1.java
			|---TestSrv2.java
|---Web Content
|	|
	|-----form.html 
	|
	|-----WEB-INF
		|
		|-----web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

form.html
----------
<form action="test1" method="GET">

	Name: <input type="text" name="t1"/> <br>
	
	Father Name : <input type="text" name="t2"/> <br>
	
	Maritial status : 
	<input type="checkbox" name="t3" value="married"/> MARRIED
	<input type="checkbox" name="t3" value="single"/> SINGLE
	<br>
	
	<input type="submit" value="submit"/>

</form>

web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <servlet>
  	<servlet-name>TestSrv1</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv1</servlet-class> 
  	<load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
  	<servlet-name>TestSrv1</servlet-name>
  	<url-pattern>/test1</url-pattern>
  </servlet-mapping>
  
   <servlet>
  	<servlet-name>TestSrv2</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv2</servlet-class> 
  	<load-on-startup>2</load-on-startup>
  </servlet>
  <servlet-mapping>
  	<servlet-name>TestSrv2</servlet-name>
  	<url-pattern>/test2</url-pattern>
  </servlet-mapping>
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>
  
  
</web-app>

TestSrv1.java
-------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

public class TestSrv1 extends HttpServlet 
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form data 
		String name=req.getParameter("t1");
		String fname=req.getParameter("t2");
		String ms=req.getParameter("t3");
		
		HttpSession session=req.getSession(true);
		session.setAttribute("pname", name);
		session.setAttribute("pfname", fname);
		session.setAttribute("pms", ms);
		
		if(ms.equals("married"))
		{
			pw.println("<form action='test2' method='GET'>");
			pw.println("Spouse Name : <input type='text' name='f2t1'/> <br>");
			pw.println("No of Child : <input type='text' name='f2t2'/> <br>");
			pw.println("<input type='submit' value='submit'/>");
			pw.println("</form>");
		}
		else
		{
			pw.println("<form action='test2' method='GET'>");
			pw.println("When will u marry : <input type='text' name='f2t1'/> <br>");
			pw.println("Why will u marry : <input type='text' name='f2t2'/> <br>");
			pw.println("<input type='submit' value='submit'/>");
			pw.println("</form>");
		}
		pw.close();
	}
}

TestSrv2.java
-------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

public class TestSrv2 extends HttpServlet 
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form1 data
		HttpSession session=req.getSession(false);
		String name=(String)session.getAttribute("pname");
		String fname=(String)session.getAttribute("pfname");
		String ms=(String)session.getAttribute("pms");
		
		//reading form2 data
		String val1=req.getParameter("f2t1");
		String val2=req.getParameter("f2t2");
		
		//display the data 
		pw.println("Form 1 Data :"+name+" "+fname+" "+ms+"<br>");
		pw.println("Form 2 Data :"+val1+" "+val2+"<br>");
		pw.close();
	}
}

Request url
---------
	http://localhost:2525/SessionTracking/


Interview Question
=================

Q)Write a java program to display below loop pattern?

2
3  5
7  11 13
17 19 23 29 

ex:
---
package com.ihub.www;

public class Test 
{
	public static void main(String[] args) 
	{
		int num=2;
		
		for(int i=1;i<=4;i++)
		{
			//cols
			for(int j=1;j<=i;j++)
			{
				while(true)
				{
					boolean flag=true;
					for(int k=2;k<=num/2;k++)
					{
						if(num%k==0)
						{
							flag=false;
							break;
						}
					}
					if(flag)
					{
						System.out.print(num+" ");
						num++;
						break;
					}
					num++;
				}
			}
			//new line
			System.out.println("");
		}
	}
}

Q) Write a java program to display all permutations of a given string?

input:
	ABC

output:
	ABC
	ACB
	BAC
	BCA
	CAB
	CBA

ex:
----
package com.ihub.www;

public class Test 
{
	public static void main(String[] args) 
	{
		String str="ABC";	
		//caller method 
		permutations(str.toCharArray(),0);
		
	}
	
	//callie method 
	public static void permutations(char[] arr,int fi)
	{
		if(fi==arr.length-1) 
		{
			System.out.println(arr);
			return;
		}
		for(int i=fi;i<arr.length;i++)
		{
			swap(arr,i,fi);
			permutations(arr,fi+1);
			swap(arr,i,fi);
		}
	}
	//swapping logic
	public static void swap(char[] arr,int i,int fi)
	{
		char temp=arr[i];
		arr[i]=arr[fi];
		arr[fi]=temp;
	}
}











































































































	



























































