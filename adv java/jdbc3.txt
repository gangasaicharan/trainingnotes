Q)Write a jdbc application to display student name and addres from student   table?

package com.ihub.www;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

public class SelectApp2 
{
	public static void main(String[] args)throws Exception 
	{
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		Statement st=con.createStatement();
		
		String qry="select sname,sadd from student";
		
		ResultSet rs=st.executeQuery(qry);
		
		while(rs.next())
		{
			System.out.println(rs.getString(1)+" "+rs.getString(2));
		}
		
		rs.close();
		st.close();
		con.close();
		
	
	}
}

Q)Write a jdbc application to display student information based on student number?

package com.ihub.www;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Scanner;
public class SelectApp3 
{
	public static void main(String[] args)throws Exception  
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the student no :");
		int no=sc.nextInt();
		
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		Statement st=con.createStatement();
		
		String qry="select * from student where sno="+no;
		
		ResultSet rs=st.executeQuery(qry);
		
		int cnt=0;
		while(rs.next())
		{
			System.out.println(rs.getInt(1)+" "+rs.getString(2)+" "+rs.getString(3));
			cnt=1;
		}
		
		if(cnt==0)
			System.out.println("No Rows selected");
		
		rs.close();
		st.close();
		con.close();
		
	}
}

Non-Select queries
=================

Q)Write a jdbc application to insert a record into student table?

package com.ihub.www;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.util.Scanner;

public class InsertApp 
{
	public static void main(String[] args)throws Exception 
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the student no :");
		int no=sc.nextInt();
		System.out.println("Enter the student name :");
		String name=sc.next();
		System.out.println("Enter the student address :");
		String add=sc.next();
		
		//converting inputs according to SQL query.
		name="'"+name+"'";
		add="'"+add+"'";
		
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		Statement st=con.createStatement();
		
		String qry="insert into student values("+no+","+name+","+add+")";
		
		int result=st.executeUpdate(qry);
		
		if(result==0)
			System.out.println("No Record inserted");
		else
			System.out.println(result+" Record inserted");
		
		st.close();
		con.close();
		
	}
}

Q)Writ a JDBC application to update student record based on student number?

package com.ihub.www;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.util.Scanner;

public class UpdateApp 
{
	public static void main(String[] args)throws Exception  
	{
			
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the student no :");
		int no=sc.nextInt();
		System.out.println("Enter the student name :");
		String name=sc.next();
		
		//converting inputs according to SQL query.
		name="'"+name+"'";
		
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		Statement st=con.createStatement();
		
		String qry="update student set sname="+name+" where sno="+no;
		
		int result=st.executeUpdate(qry);
		
		if(result==0)
			System.out.println("No Record updated");
		else
			System.out.println(result+" Record updated");
		
		st.close();
		con.close();
	}

}

Q)Write a jdbc application to delete a record from student table based on student number?

package com.ihub.www;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.util.Scanner;

public class DeleteApp 
{
	public static void main(String[] args)throws Exception  
	{
		
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the student no :");
		int no=sc.nextInt();
		
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		Statement st=con.createStatement();
		
		String qry="delete from student where sno="+no;
		
		int result=st.executeUpdate(qry);
		
		if(result==0)
			System.out.println("No Record deleted");
		else
			System.out.println(result+" record deleted");
		
		st.close();
		con.close();
	}
}

Type1 JDBC Architecture / JDBC-ODBC Bridge Driver
===================================================
Type1 JDBC driver is not designed to communicate with database software directly. 

It is designed to take the support of ODBC driver and Vendor DB library to locate and interact with database software.

Diagram: jdbc3.1

Advantages:
------------
Using Type1 JDBC driver we can interact with any database software.

It is a built-in driver of JDK.


Disadvantages:
-------------
This driver performance is low.Hence it is not suitable for medium and large scale projects.So it is not a industry standard driver.

To work with Type1 JDBC driver we need to arrange ODBC driver and vendor db library.

Since ODBC driver and Vendor db library present at client side so it is not suitable for untrusted applets to database communication.


Type2 JDBC Driver architecture / Native API 
==============================================
Type2 JDBC driver is not designed to interact with database software.

It is designed to take the support of vendor db library to locate and interact with database software.

Diagram: jdbc3.2

Advantages:
------------
Type2 JDBC driver will not take the support of ODBC driver.

This driver will give better performance when compare to type1 jdbc driver.

Disadvantages:
------------
This driver performance is bit slow.Hence it is not suitable for medium and large scale projects.So it is not a industry standard driver.

To work with Type2 JDBC driver we need to arrange vendor db library.

Since vendor db library present at client side so it is not suitable to perform untrusted applets to database communication.

For every database we need to arrange type2 jdbc driver seperately.





































































	



























