Types of URL patterns
=====================
Every servlet will recognize with the help url pattern only.

Our client, server and other web resource programs will recognize each servlet program by using url pattern.

URL pattern will hide technology name or class name from the outsider for security reason.

We have three types of url patterns.

1)Exact Match URL Pattern 

2)Directory Match URL Pattern

3)Extension Match URL pattern 

1)Exact Match URL Pattern 
------------------------
It starts with '/' forward slash followed by a name.

web.xml
-------
	<url-pattern>/test</url-pattern>

Request url
-----------
	http://localhost:2525/DateApp/test   //valid 

	http://localhost:2525/DateApp/best   //invalid 

	http://localhost:2525/DateApp/a/test   //invalid 
 	

2)Directory Match URL Pattern
-----------------------------
It starts with '/' symbol and ends with '*' symbo.

ex:

web.xml
------
	<url-pattern>/x/y/*</url-pattern>

Request url
----------
	http://localhost:2525/DateApp/x/y/z  //valid 

	http://localhost:2525/DateApp/x/y/z/test  //valid 

	http://localhost:2525/DateApp/y/x/z   //invalid 

3)Extension Match URL pattern 
----------------------------
It starts with '*' symbol having some extension.

ex:

web.xml
-------
	<url-pattern>*.do</url-pattern>

Request url
----------
	http://localhost:2525/DateApp/test  //invalid 
	http://localhost:2525/DateApp/test.do //valid 
	http://localhost:2525/DateApp/x/y/z.do //valid 
 
 

MIME Types / setContentType() 
===============================
MIME stands for Multipurpose Internet Mail Extension.

MIME describes in how many ways we can display the output in servlets.

There are following ways to display the output in servlet.

1) text/html 
-----------
	It will display the output in html format.

2) text/xml 
-----------
	It will display the output in xml format.

3) application/ms-word
---------------------
	It will display the output in word format.

4) application/vnd.ms-excel 
-------------------------
	It will display the output in excel format.

Deployment Directory structure
-------------------------------

MIMEApp
|
|-----Java Resources
|	|
	|------src
		|
		|---com.ihub.www
			|
			|----TestSrv1.java
			|----TestSrv2.java
			|----TestSrv3.java
			|----TestSrv4.java
|
|------Web Content
	|
	|-------WEB-INF
		|
		|---web.xml
		
Note:
----
In above application we need to add "servlet-api.jar" file in project build path.


If a web application contains multiple servlets then each servlet we need to configure in web.xml file by using multiple <servlet> and <servlet-mapping> tags.

TestSrv1.java
-------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.GenericServlet;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

public class TestSrv1 extends GenericServlet
{
	public void service(ServletRequest req,ServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		pw.println("<table border='1'>");
		pw.println("<tr><th>SNO</th><th>SNAME</th><th>SADD</th></tr>");	
		pw.println("<tr><td>101</td><td>Alan</td><td>USA</td></tr>");
		pw.println("<tr><td>102</td><td>Jose</td><td>UK</td></tr>");
		pw.println("<tr><td>103</td><td>Lisa</td><td>UAE</td></tr>");
		pw.println("</table>");
		
		pw.close();
	}
}



TestSrv2.java
------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.GenericServlet;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

public class TestSrv2 extends GenericServlet
{
	public void service(ServletRequest req,ServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/xml");
		
		pw.println("<table border='1'>");
		pw.println("<tr><th>SNO</th><th>SNAME</th><th>SADD</th></tr>");	
		pw.println("<tr><td>101</td><td>Alan</td><td>USA</td></tr>");
		pw.println("<tr><td>102</td><td>Jose</td><td>UK</td></tr>");
		pw.println("<tr><td>103</td><td>Lisa</td><td>UAE</td></tr>");
		pw.println("</table>");
		
		pw.close();
	}
}



TestSrv3.java
-----------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.GenericServlet;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

public class TestSrv3 extends GenericServlet
{
	public void service(ServletRequest req,ServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("application/ms-word");
		
		pw.println("<table border='1'>");
		pw.println("<tr><th>SNO</th><th>SNAME</th><th>SADD</th></tr>");	
		pw.println("<tr><td>101</td><td>Alan</td><td>USA</td></tr>");
		pw.println("<tr><td>102</td><td>Jose</td><td>UK</td></tr>");
		pw.println("<tr><td>103</td><td>Lisa</td><td>UAE</td></tr>");
		pw.println("</table>");
		
		pw.close();
	}
}


TestSrv4.java
----------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.GenericServlet;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

public class TestSrv4 extends GenericServlet
{
	public void service(ServletRequest req,ServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("application/vnd.ms-excel");
		
		pw.println("<table border='1'>");
		pw.println("<tr><th>SNO</th><th>SNAME</th><th>SADD</th></tr>");	
		pw.println("<tr><td>101</td><td>Alan</td><td>USA</td></tr>");
		pw.println("<tr><td>102</td><td>Jose</td><td>UK</td></tr>");
		pw.println("<tr><td>103</td><td>Lisa</td><td>UAE</td></tr>");
		pw.println("</table>");
		
		pw.close();
	}
}


web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <servlet>
  	<servlet-name>TestSrv1</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv1</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>TestSrv1</servlet-name>
  	<url-pattern>/html</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<servlet-name>TestSrv2</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv2</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>TestSrv2</servlet-name>
  	<url-pattern>/xml</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<servlet-name>TestSrv3</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv3</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>TestSrv3</servlet-name>
  	<url-pattern>/word</url-pattern>
  </servlet-mapping>
  
  
  <servlet>
  	<servlet-name>TestSrv4</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv4</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>TestSrv4</servlet-name>
  	<url-pattern>/excel</url-pattern>
  </servlet-mapping>
  
  
</web-app>

Request url
----------
	localhost:2525/MIMEApp/html
	localhost:2525/MIMEApp/xml
	localhost:2525/MIMEApp/word
	localhost:2525/MIMEApp/excel


Types of Communication
======================
We can communicate to Servlet program in three ways.

1)Browser to servlet communication 

2)HTML to servlet communication

3)Servlet to servlet communication

In browser to servlet communication, we need to type our request url in browser address bar.

Typing request url in browser address bar is quit complex.

To overcome this limitation we need to use HTML to servlet communication.

In html to servlet communication we will send the request to servlet program by using html based hyperlinks and form pages.

A request which is generated by using hyperlink does not carry the data.

But the request which is generated by using form page will carry the data.


In html based hyperlink to servlet communication we need to type our request url as href url.

ex:
	<a href="http://localhost:2525/DateApp/test"> click </a> 


Example application on HTML based hyperlink to Servlet Communication
=====================================================================
Diagram: servlet3.1

Deployment Directory structure
-------------------------------
WishApp
|
|-----Java Resources
|	|
	|------src
		|
		|---com.ihub.www
			|
			|----WishSrv.java
|
|------Web Content
	|
	|-------index.html 
	|
	|-------WEB-INF
		|
		|---web.xml
		
Note:
----
In above application we need to add "servlet-api.jar" file in project build path.

It is never recommanded to extends a class with GenericServlet class because it will not give HTTP protocol features.

It is always recommanded to extends a class with HttpServlet class because it will give HTTP protocol features.

index.html
------------
<center>
	
	<h1>
		<a href="test"> getMsg </a>
	</h1>

</center>

web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
 
 <servlet>
 	<servlet-name>WishSrv</servlet-name>
 	<servlet-class>com.ihub.www.WishSrv</servlet-class>
 </servlet>
 <servlet-mapping>
 	<servlet-name>WishSrv</servlet-name>
 	<url-pattern>/test</url-pattern>
 </servlet-mapping>
 
 <welcome-file-list>
 	<welcome-file>index.html</welcome-file>
 </welcome-file-list>
 
 
</web-app>

WishSrv.java
------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Calendar;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class WishSrv extends HttpServlet
{
	public void service(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		Calendar c=Calendar.getInstance();
		int h=c.get(Calendar.HOUR_OF_DAY);
		if(h<12)
			pw.println("<center><h1>Good Morning</h1></center>");
		else if(h<16)
			pw.println("<center><h1>Good Afternoon</h1></center>");
		else if(h<20)
			pw.println("<center><h1>Good Evening</h1></center>");
		else
			pw.println("<center><h1>Good Night</h1></center>");
		
		pw.close();
	}
}

Request url
---------
	http://localhost:2525/WishApp/













































































