JSP
====
JSP stands for Java Server Pages.

JSP is a dynamic web resource program which is used to develop web applications.

Limitations with Servlets
===========================
> To work with servlet strong java knowledge is required.

> It is not suitable for non-java programmers.

> It does not give any implicit object. 
  (Object which can be used directly without any configuration)

> Configuration of each servlet program in web.xml file is mandatory.

> Handling exceptions are mandatory.

> We can't maintain HTML code and java code seperately.


Advantages of JSP
==================
> To work with JSP strong java knowledge is not required.

> It is suitable for java and non-java programmers.

> It supports tag based language.

> It allows us to work with custom tags.

> It gives 9 implicit objects.

> Configuration of each jsp program in web.xml file is optional.

> Handling exceptions are not mandatory.

> We can maintain HTML code and Java Code seperately.

> It gives all the features of Servlets.



First web application development having jsp program as web resource program
===========================================================================

Deployment Directory structure
--------------------------------
JSPApp1
|
|----Java Resources
|
|----Web Content
	|
	|---ABC.jsp
	|
	|---WEB-INF
		|
		|---web.xml 
Note:
-----
In above application we need to "servlet-api.jar" file in project build path.

ABC.jsp
-------
<center>
	<h1>
	
		Current Date and Time : <br> 
		<%
			java.util.Date d=new java.util.Date();
			out.println(d);
		%>
	</h1>
</center>

web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  
</web-app>

Request url
---------
	http://localhost:2525/JSPApp1/ABC.jsp

Note:
-----
To execute jsp applications we need to add ecj-4.4.2.jar file in Tomcat/lib directory.

Download link : 
----------------
http://www.java2s.com/Code/Jar/e/Downloadecj422jar.htm



Configuration of jsp program in web.xml file 
==============================================

Deployment Directory structure
--------------------------------
JSPApp1
|
|----Java Resources
|
|----Web Content
	|
	|---ABC.jsp
	|
	|---WEB-INF
		|
		|---web.xml 
Note:
-----
In above application we need to "servlet-api.jar" file in project build path.

ABC.jsp
-------
<center>
	<h1>
	
		Current Date and Time : <br> 
		<%
			java.util.Date d=new java.util.Date();
			out.println(d);
		%>
	</h1>
</center>

web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  	<servlet>
  		<servlet-name>ABC</servlet-name>
  		<jsp-file>/ABC.jsp</jsp-file>
  	</servlet>
  	<servlet-mapping>
  		<servlet-name>ABC</servlet-name>
  		<url-pattern>/test</url-pattern>
  	</servlet-mapping>
</web-app>

Request url
---------
	http://localhost:2525/JSPApp1/ABC.jsp  //valid
	http://localhost:2525/JSPApp1/test     //valid  



How can we hide web application accessible through file name.It means how can we access web application by using url pattern
===========================================================================
To access web application by using url pattern we need to save ABC.jsp file inside "WEB-INF" folder.	


Deployment Directory structure
--------------------------------
JSPApp1
|
|----Java Resources
|
|----Web Content
	|
	|
	|---WEB-INF
		|
		|---ABC.jsp
		|
		|---web.xml 

Note:
-----
In above application we need to "servlet-api.jar" file in project build path.

ABC.jsp
-------
<center>
	<h1>
	
		Current Date and Time : <br> 
		<%
			java.util.Date d=new java.util.Date();
			out.println(d);
		%>
	</h1>
</center>

We need to perform following changes inside web.xml file.

web.xml
-------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  	<servlet>
  		<servlet-name>ABC</servlet-name>
  		<jsp-file>/WEB-INF/ABC.jsp</jsp-file>
  	</servlet>
  	<servlet-mapping>
  		<servlet-name>ABC</servlet-name>
  		<url-pattern>/test</url-pattern>
  	</servlet-mapping>
</web-app>

Request url
---------
	http://localhost:2525/JSPApp1/ABC.jsp  //invalid
	http://localhost:2525/JSPApp1/test     //valid  


JSP life cycle methods
======================
JSP contains three life cycle methods.

1)_jspInit()
------------
	It is used for instantiation event.
	This method will execute just before JES class object creation.
	Here JES stands for Java Equivalent Servlet class.

2)_jspService()
-------------
	It is a request arrival event.
	This method will execute when request goes to jsp.

3)_jspDestroy() 
------------
	It is used for destruction event.
	This method will execute just before JES class object destruction.


Phases in JSP
=============
There are two phases in JSP.

1)Translation phase 

2)Request processing phase 

1)Translation phase 
---------------------
In translation phase our JSP program will converts to JES class.

2)Request processing phase 
-------------------------
In request processing phase, our request goes to JES class and output will send to browser window as dynamic response.

Diagram: jsp1.1



Q)How to enable <load-on-startup> and what happends if we enable <load-on-startup> ?

We can enable <load-on-startup> inside web.xml file.

web.xml
--------
<web-app>
	<servlet>
  		<servlet-name>ABC</servlet-name>
  		<jsp-file>/WEB-INF/ABC.jsp</jsp-file>
  		<load-on-startup>1</load-on-startup>
  	</servlet>
  	<servlet-mapping>
  		<servlet-name>ABC</servlet-name>
  		<url-pattern>/test</url-pattern>
  	</servlet-mapping>
</web-app>

If we enable <load-on-startup> then our servlet container will perform translation phase during the server startup or during the deployment of web application.



JSP Tags/Elements
===================
We have following tags in JSP.

1)Scripting tags 
---------------
	i) scriptlet tag 
		ex:
			<%  code here  %>

	ii)Expression tag 
		ex:
			<%=  code here  %>

	iii)Declaration tag 
		ex:
			<%! code here  %>		
	

2)Directive tags 
--------------
	i) page directive 
		ex:
			<%@page  attribute=value %>

	ii) include directive 
		ex:
			<%@include attribute=value %>

3)Standard tags 
---------------
	<jsp:include>
	<jsp:forward>
	<jsp:useBean>
	<jsp:setProperty>
	<jsp:getProperty
	<jsp:params>
	and etc.






























































































