Servlet API
============
API is a collection of packages.
ex:
	javax.servlet.*;
	javax.servlet.http.*;


Important terminologies
========================
javax.servlet.Servlet(I)
	|
	|
javax.servlet.GenericServlet(AC)
	|
	|
javax.servlet.http.HttpServlet(C)



First webapplication development having servlet program as web resource prog
============================================================================
Diagram: servlet2.1

Deployment Directory structure
-----------------------------
DateApp
|
|---Java Resources
|	|
	|-----src
		|
		|--com.ihub.www
			|
			|---DateSrv.java
|
|---Web Content
	|
	|------WEB-INF
		|
		|------web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.


step1:
-----
	Create a dynamic web project i.e DateApp.
	ex:
		File --> new --> Dynamic web project --> 
		Project Name : DateApp --> 
		Dynamic web module version : 3.0 
		---> Next --> Next --> click on generate 
		web.xml file --> finish.

step2:
------
	Add "servlet-api.jar" file in project build path.
	ex:
		right click to DateApp -->Build path --> configuration 
		build path --> libraries ---> Add external jars -->
		Select "servlet-api.jar" file --> open --> ok.

step3:
-----
	Create "com.ihub.www" package inside "JavaResources/src" folder.
	ex:
		right click to src folder--> new --> 
		package --> Name : com.ihub.www --> finish.

step4:
-----
	Create "DateSrv.java" file inside "com.ihub.www" package.
	ex:
		right click to com.ihub.www --> new --> class -->
		name : DateSrv --> finish. 

DateSrv.java
-----------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Date;

import javax.servlet.GenericServlet;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

public class DateSrv extends GenericServlet 
{
	public void service(ServletRequest req,ServletResponse res)throws ServletException,IOException 
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		Date d=new Date();
		pw.println("<center><h1>Current Date and Time:<br>"+d+"</h1></center>");
		
		pw.close();
	}
}

step5:
-----
	Configure each servlet program in web.xml file.

web.xml
------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <servlet>
  	<servlet-name>DateSrv</servlet-name>
  	<servlet-class>com.ihub.www.DateSrv</servlet-class>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>DateSrv</servlet-name>
  	<url-pattern>/test</url-pattern>
  </servlet-mapping>
  
</web-app>

step6:
------
	Add Tomcat7 server to eclipse IDE.
	ex:
		window --> preferences --> server --> Runtime Environments
		---> click to add button --> select Apache --> 
		Tomcat 7 version --> Next ---->
		click on browser button -->
		select Tomcat7.0 folder --> ok --> finish -->ok. 

step7:
-------
	Run the dynamic web project i.e DateApp.
	ex:
		right click to DateApp --> run as --> run on server 
		--> Apache --> Tomcat 7.0 --> next --> finish.


step8:
------
	Test the application by using below request url.
	ex:
		http://localhost:2525/DateApp/test 
			|         |    |       |
		hostname      portno webapp   url pattern 

Note:
----
We will get 404 error when there is a problem with web.xml file.

We will get 500 error when there is a problem with servlet program.




















	











































