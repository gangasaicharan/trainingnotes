Identifiers
============
A name in java is called identifier.

It can be class name, variable name, method name or label name.

ex:
	class  Demo
	{
		public static void main(String[] args)
		{
			int  x = 10;
			
			System.out.println(x); 
		}
	}
	Here Demo, main , args and x are identifiers.

Rules to declare an  identifier
--------------------------------
Rule1:
-----
	Identifier will accept following characters.
	ex:
		A-Z
		a-z
		0-9
		_
		$

Rule2:
-----
	If we take other characters then we will get compile time error.
	ex:
		int  $=10;  //valid 

		int  #=20;  //invalid 

		int  emp_no;  //valid 

		int  stud@name; //invalid 
Rule3:
------
	Every identifier must and should starts with alphabet,underscore or dollar 	symbol but not with digits.
	ex:
		int   a1234; //valid 
		int  _abcd;  //valid 
		int  1abcd;  //invalid 

Rule4:
-----
	We can't take reserved words as an identifier name.
	ex:
		int  if; //invalid
		int  else; //invalid 
		int  for; //invalid 

Rule5:
-----
	Every identifier is a case sensitive.
	ex:
		int number;
		int NUMBER;
		int NumBer;

Rule6:
------
	There is no length limit for an identifier but is not recommanded to 
	take more then 15 characters.


Reserved Words
===============
There are some identifiers which are reserved to associate some functionality or
meaning such type of identifiers are called reserved words. 

Java supports 53 reserved words and it is divided into two types.

Diagram: java4.1

Used keywords with respect to class
---------------------------------
class
interface
enum
package
import
extends
implements

Used keywords with respect to object
------------------------------
this
super
insteadof
new 

Used keywords with respect to datatypes
------------------------------------
byte
short
int
long
float
double
boolean
char 

Used keywords with respect to modifiers
------------------------------------
default
public
private
protected
static
final
abstract
strictfp
synchronized
transient
volatile
native

Used keywords with respect to returntype
----------------------------
void

Used keywords with respect to flow control
-------------------------------------------
if
else
switch
do
while
break
continue
for
case 

Used keywords with respect to exception handling
---------------------------------
try 
catch
finally 
throw 
throws 
assert 

















































































































































