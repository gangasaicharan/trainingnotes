2)No returntype with argument method
======================================
If we have arguments then we need to ask our input values inside main method.

Number of arguments depends upon number of inputs.

Q)Write a java program to perform sum of two numbers with no returntype with   argument method?

ex:

import java.util.Scanner;
class Test 
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the first number :");
		int a=sc.nextInt();
		System.out.println("Enter the second number :");
		int b=sc.nextInt();

		//caller method
		sum(a,b);
	}

	//callie method
	public static void sum(int a,int b)
	{
		int c=a+b;
		System.out.println("sum of two numbers is ="+c);
	}
}

4)With returntype with argument method
======================================

Q)Write a java program to perform sum of two numbers using with returntype with argument method?

ex:

import java.util.Scanner;
class Test
{
	public static void main(String[] args)
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the first number :");
		int a=sc.nextInt();
		System.out.println("Enter the second number :");
		int b=sc.nextInt();

		//caller method
		System.out.println("sum of two numbers is ="+sum(a,b));
	}
	//callie method
	public static int sum(int a,int b)
	{
		int c=a+b;

		return c;
	}
}

Assignment
============
Q)Write a java program to find out given number is even or odd?


Java Recursion
==============
A method which call itself for many number of times is called recursion.

Recursion is similar to loopings.

Whenever we use recursion, we should not use loops.


Q)Write a java program to display 10 natural numbers without using loops?

class Test
{
	public static void main(String[] args)
	{
		//caller method
		display(1);
	}
	//callie method
	public static void display(int i)
	{
		if(i<=10)
		{
			System.out.print(i+" ");

			display(i+1);
		}
	}
}

Q)Write a java program to find out N-th element of fibonacci series ?

Fibonacci series : 0 1 1 2 3 5 8

input:
	4

output:
	2 

ex:
---
import java.util.Scanner;
class Test
{
	public static void main(String[] args)
	{
		Scanner sc=new Scanner(System.in);

		System.out.println("Enter the number :");
		int n=sc.nextInt();

		//caller method
		System.out.println(fib(n));

	}
	//callie method
	public static int fib(int n)
	{
		if(n==0 || n==1)
			return 0;
		if(n==2)
			return 1;

		return fib(n-1)+fib(n-2);
	}
}

Q)Write a java program to find out factorial of a given number using recursion?

input:
	5

output:
	120

ex:

import java.util.Scanner;
class Test
{
	public static void main(String[] args)
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the number :");
		int n=sc.nextInt();//5

		//caller method
		System.out.println(factorial(n));
	}
	//callie method
	public static int factorial(int n)
	{
		if(n<0)
			return -1;
		if(n==0)
			return 1;

		return n*factorial(n-1);
	}
}


Q)Write a java program to check given number is palindrome or not using recursion?

input:
	121

output:
	It is a palindrome number

ex:
---
public class Test 
{
    public static void main(String[] args) 
	{
        int num = 121; 
        int original = num;
        int reversed = 0;
        
        if (isPalindrome(num, original, reversed))
            System.out.println(num + " is a palindrome.");
        else 
            System.out.println(num + " is not a palindrome.");
    }

	// callie method
    public static boolean isPalindrome(int num, int original, int reversed) {
        if (num == 0) {
            return original == reversed;
        }
        
        reversed = reversed * 10 + num % 10;
        return isPalindrome(num / 10, original, reversed);
    }
}

Q)Write a java program to perform sum of two numbers without using arithmetic operator?

ex:

import java.util.Scanner;
public class Test 
{
    public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the first number :");
		int a=sc.nextInt();
		System.out.println("Enter the second number :");
		int b=sc.nextInt();

		//caller method
		System.out.println("sum of two numbers is ="+sum(a,b));
    }

	//callie method
	public static int sum(int a,int b)
	{
		if(a==0)
			return b;

		return sum(--a,++b);
	}
}

LOOP PATTERNS
==============
1)
1 1 1 1 
2 2 2 2
3 3 3 3
4 4 4 4 


public class Test 
{
    public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=4;i++)
		{
			//cols
			for(int j=1;j<=4;j++)
			{
				System.out.print(i+" ");
			}
			//new line
			System.out.println("");
		}
    }
}

2)
1 2 3 4
1 2 3 4
1 2 3 4
1 2 3 4

ex:

public class Test 
{
    public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=4;i++)
		{
			//cols
			for(int j=1;j<=4;j++)
			{
				System.out.print(j+" ");
			}
			//new line
			System.out.println("");
		}
    }
}

3)

* * * * 
* * * *
* * * *
* * * * 

public class Test 
{
    public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=4;i++)
		{
			//cols
			for(int j=1;j<=4;j++)
			{
				System.out.print("* ");
			}
			//new line
			System.out.println("");
		}
    }
}































































































































































