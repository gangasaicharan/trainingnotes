Sub Queries
============
If we declare a query inside another query such concept is called sub query.

Sub queries are used to select the records based on unknown values.

In sub queries first inner query will execute then outer query.

We have following list of sub queries.

1) Single Row Sub query 

2) Multiple Row Sub query 

3) Mutiple Column Sub query 

1) Single Row Sub query
-----------------------
If a sub query returns only one row is called single row sub query.

A sub query can be nested upto 32 levels.

ex:
	SQL
	----
		select * from emp where eid=201;


	SUB-QUERY
	---------
		select * from emp where eid=(select eid from emp 
						where ename='Alan');

ex:
---
	SQL
	-----
		select * from emp where eid=201 AND ename='Alan';

	SUB-QUERY
	-------
		select * from emp where 
		eid=(select eid from emp where esal=9000)
		AND
		ename=(select ename from emp where eid=201);


Q)Write a query to display second highest salary from emp table?

	select max(esal) from emp where esal<(select max(esal) from emp);


Q)Write a query to display all the employees information whose salary is 
  greater then Lisa salary?

	select * from emp where esal > 
			(select esal from emp where ename='Lisa');

2) Multiple Row Sub query
---------------------------
If a sub query returns more then one row then we need to use multiple row sub query.

To perform multiple row sub query we need to use multiple row operators.

We have following multiple row operators.

1) ANY 

2) ALL 

3) IN 

ex:
----
select * from emp where esal>ANY(select esal from emp where deptno=10);
select * from emp where esal<ANY(select esal from emp where deptno=10);

select * from emp where esal>ALL(select esal from emp where deptno=10);

select * from emp where esal IN (select esal from emp where deptno=10);

3)Multiple Column Sub query
--------------------------
If sub query returns more then one column is called multiple column sub query.

In multiple column sub query we need to use IN operator.

ex:
	select * from emp where(eid,ename,esal) IN 
			(select eid,ename,esal from emp where eid=201);

	select eid,ename,esal from emp where(eid,ename,esal) IN 
			(select eid,ename,esal from emp where eid=201);

	select eid,ename,esal from emp where(eid,ename,esal) IN 
			(select eid,ename,esal from emp );

PL/SQL
=======
PL/SQL stands for Procedureal and Structured Query Language.

It is a extension of SQL and it gives following features.

1)We can achieve programming features like control statements, loops and etc.

2)It will reduce network traffic.

3)We can display our own exception messages by using the concept of exception
  handling.

4)We can perform related operations by using the concept triggers.

5)We can save the source code permanent to database for repeated execution.

PL/SQL Block
=============
PL/SQL program is also known as PL/SQL block.

syntax:
------
	DECLARE 
	-
	-      // Declaration section 
	-
	BEGIN
	-
	-	// Executable section 
	-
	EXCEPTION
	-
	-	// Exception section 
	-
	END;
	/

Declaration section 
------------------
Declaration section is used to declare variables, cursors, exceptions and etc.

It is optional section.


Executable section
------------------
It contains lines of code which are used complete a table.

The actual logic we will write inside executable section.

IT is a mandatory section.


Exception section
-----------------
It contains set of lines which are executed when exception is raised.

It is optional section.


In order to see the output in PL/SQL we need to set server output environment.
ex:
	SQL> set  serveroutput  on 


Q) Write a PL/SQL program to display Hello World?

	BEGIN
	DBMS_OUTPUT.PUT_LINE('Hello World');
	END;
	/

	Here DBMS_OUTPUT is a package name.
	Here PUT_LINE is a procedure name.
	Here '/' is used to submit the block into the database.

Q)Write a PL/SQL program perform sum of two numbers?

	DECLARE 
	A number;
	B number;
	C number;
	BEGIN
	A:=10;
	B:=20;
	C:=A+B;
	DBMS_OUTPUT.PUT_LINE(C);
	END;
	/


Declaration and Inialization using single line
---------------------------------------------
ex:
	DECLARE 
	A number:=10;
	B number:=20;
	C number:=A+B;
	BEGIN
	DBMS_OUTPUT.PUT_LINE('sum of two numbers is ='||C);
	END;
	/

Using '&' symbol we can read dynamic inputs.
ex:
	DECLARE 
	A number(3);
	B number(3);
	C number(6);
	BEGIN
	A:=&a;
	B:=&b;
	C:=A+B;
	DBMS_OUTPUT.PUT_LINE('sum of two number is ='||C);
	END;
	/	

In PL/SQL DML operations are allowed.


Q)Write a PL/SQL program to insert a record into student table?
	
	DECLARE 
	L_no number(3);
	L_name varchar2(10); 
	L_add  varchar2(12);
	BEGIN
	L_no:=&no;
	L_name:='&name';
	L_add:='&add';
	insert into student values(L_no,L_name,L_add);
	DBMS_OUTPUT.PUT_LINE('Record Inserted');
	END;
	/

Q)Write a PL/SQL program to update student name based on student number?

	DECLARE 
	L_name varchar2(10);
	L_no  number(3);
	BEGIN
	L_name:='&name';
	L_no:=&no;
	update student set sname=L_name where sno=L_no;
	DBMS_OUTPUT.PUT_LINE('Record Updated');
	END;
	/

Q)Write a query to delete the student record based on student number?

	DECLARE 
	L_no  number(3);
	BEGIN
	L_no:=&no;
	delete from student where sno=L_no;
	DBMS_OUTPUT.PUT_LINE('Record Deleted');
	END;
	/

IN PL/SQL, DRL operations are also allowed.

To perform DRL operations we need to use "into" clause.


Q)Write a PL/SQL program to display employee name whose employee id is 201?

	DECLARE 
	L_name varchar2(10);
	BEGIN
	select ename into L_name  from emp where eid=201;
	DBMS_OUTPUT.PUT_LINE(L_name);
	END;
	/

Q)Write a PL/SQL program to display employee name, employee salary and 
 department number whose employee id is 202?

  	DECLARE
	L_name varchar2(10);
	L_sal  number(10,2);
	L_dept number(3);
	BEGIN
select ename,esal,deptno into L_name,L_sal,L_dept from emp where eid=202;
	DBMS_OUTPUT.PUT_LINE(L_name||' '||L_sal||' '||L_dept);
	END;
	/

Q)Write a PL/SQL program to display employee name, employee salary and 
 department number based on employee id?

  	DECLARE
	L_id   number(3);
	L_name varchar2(10);
	L_sal  number(10,2);
	L_dept number(3);
	BEGIN
	L_id:=&id;
select ename,esal,deptno into L_name,L_sal,L_dept from emp where eid=L_id;
	DBMS_OUTPUT.PUT_LINE(L_name||' '||L_sal||' '||L_dept);
	END;
	/


















	













