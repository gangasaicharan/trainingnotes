Order by clause
===============
Order by clause is used to arrange the rows in a table.

By default it will arrange the records in ascending order.

ex:
	select * from emp order by eid;
	
	select * from emp order by eid desc;

	select * from emp order by esal;

	select * from emp order by ename;

Integrity Constraints
======================
A constraint is a rule which is applied on a table.	

Using constraint we can achieve accuracy and quality of data.

We have five constraints in SQL.

1) NOT NULL 

2) UNIQUE 

3) PRIMARY KEY 

4) FOREIGN KEY 

5) CHECK 

Constraint can be created at two levels.

i) column level

ii) table level 


1) NOT NULL 
------------
NOT NULL constraint does not accept null values.

NOT NULL constraint can accept duplicate values.

NOT NULL constraint can be created only at column level.

column level
------------
drop table student;
create table student(sno number(3) NOT NULL,sname varchar2(10),sadd varchar2(12));
insert into student values(101,'raja','hyd');
insert into student values(101,'ravi','delhi');
insert into student values(null,'ramana','vizag'); //invalid 
commit;

Note:
-----
NOT NULL constraint can be created for multiple columns.

ex:

drop table student;
create table student(sno number(3) NOT NULL,
			sname varchar2(10) NOT NULL,
				sadd varchar2(12) NOT NULL);

insert into student values(101,'raja','hyd');
insert into student values(null,'ravi','delhi'); //invalid 
insert into student values(102,null,'vizag'); //invalid 
insert into student values(102,'ramana',null); //invalid 
commit;


2) UNIQUE 
----------
UNIQUE constraint does not accept duplicates.

UNIQUE constraint can accept null values.

UNIQUE constraint can be created at column level and table level.

column level
-------------
drop table student;
create table student(sno number(3) UNIQUE,sname varchar2(10),sadd varchar2(12));
insert into student values(101,'raja','hyd');
insert into student values(101,'ravi','delhi'); //invalid 
insert into student values(null,'ramana','vizag'); 
commit;

Note:
-----
UNIQUE constriant can be created for multiple columns.
ex:
drop table student;
create table student(sno number(3) UNIQUE,
			sname varchar2(10) UNIQUE,
				sadd varchar2(12) UNIQUE);

insert into student values(101,'raja','hyd');
insert into student values(101,'ravi','delhi'); //invalid 
insert into student values(102,'raja','vizag'); //invalid
insert into student values(103,'ramana','hyd'); //invalid  
commit;


table level
-------------
drop table student;
create table student(sno number(3),sname varchar2(10),sadd varchar2(12),UNIQUE(sno));
insert into student values(101,'raja','hyd');
insert into student values(101,'ravi','delhi'); //invalid 
insert into student values(null,'ramana','vizag'); 
commit;


3) PRIMARY KEY 
----------------
PRIMARY KEY is a combination of NOT NULL and UNIQUE constraint.

PRIMARY KEY will not accept duplicates and null values.

A table can have only one primary key.

Primary key constraint can be created at column level and table level.

column level
-------------
drop table student;
create table student(sno number(3) PRIMARY KEY,sname varchar2(10),sadd varchar2(12));

insert into student values(101,'raja','hyd');

insert into student values(101,'ravi','delhi');//invalid 

insert into student values(null,'ramana','vizag'); //invalid 

table level
------------
drop table student;
create table student(sno number(3),sname varchar2(10),sadd varchar2(12),
				PRIMARY KEY(sno));

insert into student values(101,'raja','hyd');

insert into student values(101,'ravi','delhi');//invalid 

insert into student values(null,'ramana','vizag'); //invalid

4) FOREIGN KEY 
---------------
A foreign key is used to establish the relationship between two tables.

This relationship is called parent and child relationship or master and detailed relationship.

To establish the relationship between two tables.A parent table must have 
primary key or unique constraint and child table must have foreign key.

A foreign key will accept only those values which are present in primary key.

A primary key column name and foreign key column name may or may not match but 
datatype must match. 

A foreign key will accept duplicates and null.

Diagram: oracle6.1


college table (parent table)
----------------------------
create table college(sno number(3) PRIMARY KEY,
			sname varchar2(10),
			 	sadd varchar2(12));

insert into college values(101,'raja','hyd');
insert into college values(102,'ravi','delhi');
insert into college values(103,'ramana','vizag');
commit;

library table (child table)
---------------------------
create table library (roll_no number(3) REFERENCES college(sno),
				book_name varchar2(10));

insert into library values(101,'java');

insert into library values(102,'oracle');

insert into library values(103,'react');

insert into library values(103,'spring');

insert into library values(null,'angular');

insert into library values(104,'java'); //invalid 


To drop the tables , first we need to drop child table then parent table.

ex:
	drop table library;
	drop table college;


Q)How can we add constraint in a existing table?

	alter table emp ADD primary key(eid);


Q)How can we remove constraint from existing table?

	alter table emp DROP primary key;

5) CHECK
--------
CHECK constraint describes domain of a column.

Here domain means what type of value a column must accept.

Check constraint can be created at column level and table level.

column level
------------
drop table student;
create table student(sno number(3),sname varchar2(10),
					smarks number(3) CHECK(smarks<=100));
insert into student values(101,'raja',89);
insert into student values(102,'ravi',100);
insert into student values(103,'ramana',200);//invalid 
insert into student values(104,'ramulu',999);//invalid 

ex:
---
drop table student;
create table student(sno number(3),sname varchar2(10),
				smarks number(3) CHECK(smarks between 0 AND 100));
insert into student values(101,'raja',89);
insert into student values(102,'ravi',100);
insert into student values(103,'ramana',200);//invalid 
insert into student values(104,'ramulu',999);//invalid 

ex:
---
drop table student;
create table student(sno number(3),sname varchar2(10) CHECK(sname=upper(sname)),
				       smarks number(3) );
insert into student values(101,'raja',89); //invalid 
insert into student values(102,'RAVI',100); //valid 
insert into student values(103,'RaMaNa',200); //invalid 


ex:
---
drop table student;
create table student(sno number(3),sname varchar2(10) CHECK(sname=lower(sname)),
				       smarks number(3) );
insert into student values(101,'raja',89); //valid 
insert into student values(102,'RAVI',100); //Invalid 
insert into student values(103,'RaMaNa',200); //invalid 

table level
----------
ex:
---
drop table student;
create table student(sno number(3),sname varchar2(10) ,
				       smarks number(3),
						CHECK(sname=lower(sname)) );
insert into student values(101,'raja',89); //valid 
insert into student values(102,'RAVI',100); //Invalid 
insert into student values(103,'RaMaNa',200); //invalid 


























































































